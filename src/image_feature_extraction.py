import msdi_io as msdi
import matplotlib.pyplot as plt
import os
import numpy as np 
import skimage 
from sklearn import svm
from sklearn.model_selection import train_test_split
from sklearn.metrics import accuracy_score
from sklearn.utils import shuffle


def image_features(df,nbr_sample):
    image_path="./../data/"
    liste_im = df['img'][:nbr_sample].tolist()
    liste_features = [] 
    for i,filename in enumerate(liste_im):
        X = plt.imread(os.path.join(image_path,filename))
        im=skimage.transform.resize(image = X, output_shape = (5,5) , anti_aliasing = True,)
        liste_features.append(im.flatten()*(1/255))
        print(f"image{i}")
    return np.array(liste_features)

def list_label(df, nbr_sample):
    image_path="./../data/"
    label = df['genre'][:nbr_sample].tolist()
    return label

def train(X,y):
    clf = svm.SVC()
    clf.fit(X, y)
    return clf

def feature_extractor_processing(nbr_sample):
    image_path="./../data/"
    df = msdi.get_msdi_dataframe(image_path)
    df = shuffle(df)

    X = image_features(df,nbr_sample)
    y = list_label(df, nbr_sample)

    X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.10, random_state=42)

    model = train(X_train,y_train)

    y_pred = model.predict(X_test)
    acc = accuracy_score(y_test, y_pred)

    return acc


if __name__ == "__main__":
    result=feature_extractor_processing(1000)
    print(result)
 





